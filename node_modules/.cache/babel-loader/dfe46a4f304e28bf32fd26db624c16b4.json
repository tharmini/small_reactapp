{"ast":null,"code":"var _jsxFileName = \"/Users/tharminithalayasingam/Documents/hole React/1st_react_app/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodos from './components/AddTodos';\nimport About from './components/pages/About'; //import uuid from 'uuid';\n\nimport axios from 'axios'; //import logo from './logo.svg';\n\nimport './App.css'; //import About from './components/pages/about';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [// {\n        //   id: 1,\n        //   title: \"take out the trash\", \n        //   completed: false\n        // },\n        // {\n        //   id: 2,\n        //   title: \"dinner with wife\",\n        //   completed: true\n        // },\n        // {\n        //   id: 3,\n        //   title: \"meeting with boasss\",\n        //   completed: false\n        // }\n      ]\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = title => {\n      //console.log(title)\n      // const newTodo={\n      //   id:uuid.v4(),\n      //   title,\n      //   completed:false\n      // }\n      axios.post('https://jsonplaceholder.typicode.com/todos', {\n        title,\n        completed: false\n      }).then(res => this.setState({\n        todos: [...this.state.todos, res.data]\n      })); //this.setState({ todos: [...this.state.todos,newTodo] });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({\n      todos: res.data\n    }));\n  } //Togle complete\n\n\n  render() {\n    //console.log(this.state.todos)\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(AddTodos, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        delTodo: this.delTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tharminithalayasingam/Documents/hole React/1st_react_app/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Todos","Header","AddTodos","About","axios","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","filter","addTodo","title","post","then","res","data","componentDidMount","get","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP,C,CAEA;;AAEA,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BU,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfK;AADD,KADkB;;AAAA,SA6B1BC,YA7B0B,GA6BVC,EAAD,IAAQ;AAErB,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,IAAI;AAClC,cAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAClBG,YAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACD;;AACD,iBAAOD,IAAP;AACD,SALM;AADK,OAAd;AAQD,KAvCyB;;AAAA,SAyC1BE,OAzC0B,GAyCfL,EAAD,IAAQ;AAChB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,MAAjB,CAAwBH,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA5C,CAAJ;AAAT,OAAd;AACD,KA3CyB;;AAAA,SA6C1BO,OA7C0B,GA6ChBC,KAAD,IAAW;AAClB;AACA;AACA;AACA;AACA;AACA;AACCb,MAAAA,KAAK,CAACc,IAAN,CAAW,4CAAX,EAAwD;AACtDD,QAAAA,KADsD;AAEtDJ,QAAAA,SAAS,EAAC;AAF4C,OAAxD,EAGGM,IAHH,CAGQC,GAAG,IAAI,KAAKV,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAqBa,GAAG,CAACC,IAAzB;AAAR,OAAd,CAHf,EAPiB,CAWlB;AACD,KAzDyB;AAAA;;AAsB5BC,EAAAA,iBAAiB,GACjB;AACElB,IAAAA,KAAK,CAACmB,GAAN,CAAU,sDAAV,EACCJ,IADD,CACMC,GAAG,IAAG,KAAKV,QAAL,CAAc;AAACH,MAAAA,KAAK,EAAEa,GAAG,CAACC;AAAZ,KAAd,CADZ;AAED,GA1B2B,CA4B1B;;;AA8BAG,EAAAA,MAAM,GAAG;AACP;AACA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAEC,KAAK,IACjC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKT,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEF,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAAzB;AAAgC,QAAA,YAAY,EAAE,KAAKC,YAAnD;AACA,QAAA,OAAO,EAAE,KAAKM,OADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEX,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADE,CADJ,CADF;AAiBD;;AA7EyB;;AAgF5B,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodos from './components/AddTodos';\nimport About from './components/pages/About';\n//import uuid from 'uuid';\nimport axios from 'axios';\n//import logo from './logo.svg';\nimport './App.css';\n\n//import About from './components/pages/about';\n\nclass App extends Component {\n  state = {\n    todos: [\n      // {\n      //   id: 1,\n      //   title: \"take out the trash\", \n      //   completed: false\n      // },\n      // {\n      //   id: 2,\n      //   title: \"dinner with wife\",\n      //   completed: true\n      // },\n      // {\n      //   id: 3,\n      //   title: \"meeting with boasss\",\n      //   completed: false\n      // }\n\n\n    ]\n  }\ncomponentDidMount()\n{\n  axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n  .then(res=> this.setState({todos: res.data}))\n}\n\n  //Togle complete\n  markComplete = (id) => {\n\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed\n        }\n        return todo;\n      })\n    })\n  }\n  //delete todo\n  delTodo = (id) => {\n    this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] });\n  }\n  //add todo\n  addTodo= (title) => {\n    //console.log(title)\n    // const newTodo={\n    //   id:uuid.v4(),\n    //   title,\n    //   completed:false\n    // }\n     axios.post('https://jsonplaceholder.typicode.com/todos',{\n       title,\n       completed:false\n     }).then(res => this.setState({todos: [...this.state.todos,res.data]}));\n    //this.setState({ todos: [...this.state.todos,newTodo] });\n  }\n  render() {\n    //console.log(this.state.todos)\n    return (\n      <Router>\n          <div className=\"App\">\n        <div className=\"container\" >\n          <Header />\n          <Route exact path='/' render={props => (\n            <React.Fragment>\n            <AddTodos addTodo={this.addTodo} />\n          <Todos todos={this.state.todos} markComplete={this.markComplete} \n          delTodo={this.delTodo} />\n            </React.Fragment>\n          )  }/>\n          <Route exact path='/about' component={About}/>\n        </div>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}